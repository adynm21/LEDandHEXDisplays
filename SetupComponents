//Part I
//Just sets up the high level module for the other functions.

module part1(SW, LEDR);
    input[9:0]SW;     //toggle switches
    output[9:0]LEDR;  //red LEDs
    
    assign LEDR = SW;
endmodule

//Part II
//Coding a 2 to 1 multiplexer into the circuit using Boolean algebra

module multiplexer2to1_4bit(SW, LEDR)
    input [9:0]SW;
    output[0:0]LEDR;

    wire X,Y,S,M;
    
    assign X = SW[0:3];
    assign Y = SW[4:7];
    assign S = SW[9];

    assign M[0] = (~S&X[0])|(S&Y[0]);
    assign M[1] = (~S&X[1])|(S&Y[1]);
    assign M[2] = (~S&X[2])|(S&Y[2]);
    assign M[3] = (~S&X[3])|(S&Y[3]);

    assign LEDR[0:3] = M; 
    assign LEDR[4:8] = 0;
    assign LEDR[9] = S;
endmodule

//Part III
//Coding a 2-bit wide 3-to-1 multiplexer using Boolean algebra

module part3(SW, LEDR)
    input [9:0]SW;
    output [9:0]LEDR;
    
    wire U,V,W,S1,S0,M;

    assign S1 = SW[9];
    assign S0 = SW[8];
    assign U = SW[4:5];
    assign V = SW[2:3];
    assign W = SW[0:1];

    assign M[0] = (~S1&~S0&U[0])|(~S1&S0&V[0])|(S1&~S0&W[0])|(S1&S0&W[0]) 
    assign M[1] = (~S1&~S0&U[1])|(~S1&S0&W[1])|(S1&~S0&W[1])|(S1&S0&W[1])

    assign LEDR[0:1] = M;
    assign LEDR[2:9] = 0;
endmodule
